[{"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time.component.tsx":"1","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time.component.stories.tsx":"2","/System/Volumes/Data/development/beesoft-components/src/components/beesoft-transition/beesoft-transition.component.tsx":"3","/System/Volumes/Data/development/beesoft-components/src/components/dom-handler.ts":"4","/System/Volumes/Data/development/beesoft-components/src/components/common-functions.ts":"5","/System/Volumes/Data/development/beesoft-components/src/components/common-event-handlers.ts":"6","/System/Volumes/Data/development/beesoft-components/src/components/overlay-panel/overlay-panel.component.tsx":"7","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-day-selector.component.tsx":"8","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-functions.ts":"9","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-month-selector.component.tsx":"10","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time.reducer.ts":"11","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-time-selector.component.tsx":"12","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-year-selector.component.tsx":"13","/System/Volumes/Data/development/beesoft-components/src/components/font-awesome.ts":"14","/System/Volumes/Data/development/beesoft-components/src/components/content-editable-input/content-editable-input.component.tsx":"15","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-parser.ts":"16"},{"size":5349,"mtime":1621161029040,"results":"17","hashOfConfig":"18"},{"size":772,"mtime":1621165713391,"results":"19","hashOfConfig":"18"},{"size":1970,"mtime":1620488033239,"results":"20","hashOfConfig":"18"},{"size":996,"mtime":1621078040319,"results":"21","hashOfConfig":"18"},{"size":1117,"mtime":1621078065416,"results":"22","hashOfConfig":"18"},{"size":1182,"mtime":1613225443706,"results":"23","hashOfConfig":"18"},{"size":3803,"mtime":1620623438625,"results":"24","hashOfConfig":"18"},{"size":3803,"mtime":1621159863039,"results":"25","hashOfConfig":"18"},{"size":4127,"mtime":1621160151398,"results":"26","hashOfConfig":"18"},{"size":2645,"mtime":1621160270137,"results":"27","hashOfConfig":"18"},{"size":2004,"mtime":1621075736424,"results":"28","hashOfConfig":"18"},{"size":4911,"mtime":1621160335939,"results":"29","hashOfConfig":"18"},{"size":2462,"mtime":1621160403460,"results":"30","hashOfConfig":"18"},{"size":321,"mtime":1616829375770,"results":"31","hashOfConfig":"18"},{"size":1937,"mtime":1621076511437,"results":"32","hashOfConfig":"18"},{"size":5188,"mtime":1621165975341,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"yon6kr",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time.component.tsx",["68"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useReducer, useRef, useState } from 'react';\nimport { getBrowserLanguage, getElementByClassNameRecursive } from '../common-functions';\nimport ContentEditableInput from '../content-editable-input/content-editable-input.component';\nimport OverlayPanel from '../overlay-panel/overlay-panel.component';\nimport DateTimeDaySelector from './date-time-day-selector.component';\nimport { getDefaultTime } from './date-time-functions';\nimport DateTimeMonthSelector from './date-time-month-selector.component';\nimport { parseLocaleDate } from './date-time-parser';\nimport DateTimeTimeSelector from './date-time-time-selector.component';\nimport { TimeConstraints } from './date-time-types';\nimport DateTimeYearSelector from './date-time-year-selector.component';\nimport reducer, { DateTimeActionType, DateTimeState } from './date-time.reducer';\n\nexport interface DateTimeProps {\n  value?: string | Date;\n  label?: string;\n  locale?: string;\n  format?: string;\n  timeConstraints?: TimeConstraints;\n  onChange?: (value: Date) => void;\n}\n\nexport default function DateTime({ value, label, locale, format, timeConstraints, onChange }: DateTimeProps) {\n  const [selectorOpen, setSelectorOpen] = useState(false);\n  const [dropDownTarget, setDropDownTarget] = useState<Element>();\n  const language = useRef<string>(locale || getBrowserLanguage());\n\n  const getDateValue = () => {\n    const defaultDate = new Date();\n    defaultDate.setHours(0, 0, 0, 0);\n\n    return value ? (typeof value === 'string' ? parseLocaleDate(value, language.current) : value) : defaultDate;\n  };\n\n  const initialState: DateTimeState = {\n    currentSelector: DateTimeActionType.DaySelector,\n    currentViewDate: getDateValue(),\n    selectedDate: getDateValue(),\n    originalSetDate: getDateValue(),\n    selectedDateChanged: false,\n  };\n\n  const [state, dispatcher] = useReducer(reducer, initialState);\n\n  const onFocus = (event: React.FocusEvent) => {\n    setDropDownElement(event);\n    setSelectorOpen(true);\n  };\n\n  const onInput = (event: React.FormEvent) => {\n    const inputDate = parseLocaleDate((event.target as HTMLElement).innerText, language.current);\n    dispatcher({\n      type: DateTimeActionType.SetViewDate,\n      viewDate: inputDate,\n    });\n    dispatcher({\n      type: DateTimeActionType.SetSelectedDate,\n      selectedDate: inputDate,\n    });\n  };\n\n  const onCalendarClick = (event: React.MouseEvent) => {\n    setDropDownElement(event);\n    setSelectorOpen(!selectorOpen);\n  };\n\n  const setDropDownElement = (event: React.FocusEvent | React.MouseEvent) => {\n    if (!dropDownTarget) {\n      const parentElement = getElementByClassNameRecursive(event.target as HTMLElement, 'parent-element');\n      setDropDownTarget(parentElement);\n    }\n  };\n\n  const onDateTimeHidden = () => {\n    setSelectorOpen(false);\n    dispatcher({\n      type: DateTimeActionType.DaySelector,\n    });\n\n    if (onChange && state.selectedDateChanged) {\n      onChange(state.selectedDate);\n      dispatcher({\n        type: DateTimeActionType.ResetSelectedDateChanged,\n        selectedDate: state.selectedDate,\n      });\n    }\n  };\n\n  const onTimeClicked = () => {\n    dispatcher({\n      type: DateTimeActionType.TimeSelector,\n    });\n  };\n\n  const getValue = () =>\n    `${state.selectedDate.toLocaleDateString(language.current)} ${state.selectedDate.toLocaleTimeString(\n      language.current\n    )}`;\n\n  return (\n    <div>\n      {label && <label>{label}</label>}\n      <ContentEditableInput\n        value={getValue()}\n        className=\"parent-element text-left\"\n        rightElement={<FontAwesomeIcon icon={['far', 'calendar-alt']} />}\n        rightElementClassName=\"cursor-pointer\"\n        onRightElementClick={onCalendarClick}\n        onFocus={onFocus}\n        onInput={onInput}\n      />\n      <OverlayPanel\n        visible={selectorOpen}\n        target={dropDownTarget}\n        shouldTargetCloseOverlay={false}\n        hidden={onDateTimeHidden}\n      >\n        <>\n          {state.currentSelector === DateTimeActionType.DaySelector && (\n            <DateTimeDaySelector\n              selectedDate={state.selectedDate}\n              viewDate={state.currentViewDate}\n              dispatcher={dispatcher}\n            />\n          )}\n          {state.currentSelector === DateTimeActionType.MonthSelector && (\n            <DateTimeMonthSelector viewDate={state.currentViewDate} dispatcher={dispatcher} />\n          )}\n          {state.currentSelector === DateTimeActionType.YearSelector && (\n            <DateTimeYearSelector viewDate={state.currentViewDate} dispatcher={dispatcher} />\n          )}\n          {state.currentSelector === DateTimeActionType.TimeSelector && (\n            <DateTimeTimeSelector\n              viewDate={state.currentViewDate}\n              dispatcher={dispatcher}\n              timeConstraints={timeConstraints}\n            />\n          )}\n          {state.currentSelector === DateTimeActionType.DaySelector && (\n            <div className=\"w-full flex flex-row p-2 justify-center\">\n              <div className=\"p-2 cursor-pointer hover:bg-gray-300\" onClick={onTimeClicked}>\n                {state.selectedDate?.toLocaleTimeString(language.current) || getDefaultTime(language.current)}\n              </div>\n            </div>\n          )}\n        </>\n      </OverlayPanel>\n    </div>\n  );\n}\n","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time.component.stories.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/beesoft-transition/beesoft-transition.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/dom-handler.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-functions.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-event-handlers.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/overlay-panel/overlay-panel.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-day-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-functions.ts",["69"],"import addDays from 'date-fns/addDays';\nimport addMonths from 'date-fns/addMonths';\nimport addYears from 'date-fns/addYears';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport eachYearOfInterval from 'date-fns/eachYearOfInterval';\nimport getDay from 'date-fns/getDay';\nimport getDaysInMonth from 'date-fns/getDaysInMonth';\nimport lastDayOfMonth from 'date-fns/lastDayOfMonth';\nimport startOfMonth from 'date-fns/startOfMonth';\n\nexport function getMonthMatrix(matrixDate: Date) {\n  const daysInMonth = getDaysInMonth(matrixDate);\n  const firstDayInMonth = startOfMonth(matrixDate);\n  const lastDayInMonth = lastDayOfMonth(matrixDate);\n  const firstDayOfMonthNumber = getDay(firstDayInMonth);\n  const monthDates = eachDayOfInterval({\n    start: firstDayInMonth,\n    end: lastDayInMonth,\n  });\n  const rowCount = daysInMonth + firstDayOfMonthNumber > 35 ? 7 : 6;\n  const monthMatrix = createNullMatrix(rowCount, 7);\n  let currentDay = 1;\n\n  for (let row = 0, length = 6; row < length; row++) {\n    for (let col = row > 0 ? 0 : firstDayOfMonthNumber, length = 7; col < length; col++) {\n      const currentMonthDate = monthDates[currentDay - 1];\n      currentMonthDate.setHours(matrixDate.getHours(), matrixDate.getMinutes(), matrixDate.getSeconds());\n\n      monthMatrix[row][col] = currentMonthDate;\n\n      if (++currentDay > daysInMonth) {\n        break;\n      }\n    }\n\n    if (currentDay > daysInMonth) {\n      break;\n    }\n  }\n\n  return monthMatrix;\n}\n\nfunction createNullMatrix(rows: number, columns: number): Array<Array<any>> {\n  const rowArray: Array<Array<null>> = [];\n  for (let row = 0, length = rows; row < length; row++) {\n    const colArray: Array<null> = [];\n    for (let col = 0, colLength = columns; col < colLength; col++) {\n      colArray.push(null);\n    }\n    rowArray.push(colArray);\n  }\n\n  return rowArray;\n}\n\nexport function getTranslatedDays(locale: string) {\n  // start on Sunday\n  const startDate = new Date(Date.UTC(2017, 0, 1));\n  const weekDays: Array<string> = [];\n\n  for (let i = 0; i < 7; i++) {\n    weekDays.push(addDays(startDate, i).toLocaleDateString(locale, { weekday: 'short' }));\n  }\n\n  return weekDays;\n}\n\nexport function getTranslatedMonthMatrix(locale: string) {\n  const startDate = new Date(Date.UTC(2020, 0, 1));\n  const months: Array<\n    Array<{\n      monthNumber: number;\n      monthName: string;\n    }>\n  > = [\n    [\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n    ],\n    [\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n    ],\n    [\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n      { monthNumber: 0, monthName: '' },\n    ],\n  ];\n\n  let monthCount = 0;\n  for (let row = 0; row < 3; row++) {\n    for (let column = 0; column < 4; column++) {\n      months[row][column] = {\n        monthNumber: monthCount,\n        monthName: addMonths(startDate, monthCount++).toLocaleDateString(locale, { month: 'short' }),\n      };\n    }\n  }\n\n  return months;\n}\n\nexport function getTranslatedYearMatrix(matrixDate: Date, locale: string) {\n  const clonedDate = new Date(matrixDate.getTime());\n  const nearestDecadeYear = Math.floor(clonedDate.getFullYear() / 10) * 10;\n  clonedDate.setFullYear(nearestDecadeYear);\n\n  const matrixYears = eachYearOfInterval({\n    start: clonedDate,\n    end: addYears(clonedDate, 9),\n  });\n\n  const years: Array<Array<string>> = createNullMatrix(3, 4);\n  let yearCount = 0;\n  for (let row = 0; row < 3; row++) {\n    for (let column = 0; column < 4; column++) {\n      years[row][column] = matrixYears[yearCount++].toLocaleDateString(locale, {\n        year: 'numeric',\n      });\n\n      if (yearCount === matrixYears.length) {\n        break;\n      }\n    }\n  }\n\n  return years;\n}\n\nexport function getDefaultTime(locale: string) {\n  const tempDate = new Date();\n  tempDate.setHours(0, 0, 0, 0);\n  return tempDate.toLocaleTimeString(locale);\n}\n","/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-month-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time.reducer.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-time-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-year-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/font-awesome.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/content-editable-input/content-editable-input.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/date-time/date-time-parser.ts",[],{"ruleId":"70","severity":1,"message":"71","line":24,"column":58,"nodeType":"72","messageId":"73","endLine":24,"endColumn":64},{"ruleId":"74","severity":1,"message":"75","line":44,"column":71,"nodeType":"76","messageId":"77","endLine":44,"endColumn":74,"suggestions":"78"},"@typescript-eslint/no-unused-vars","'format' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["79","80"],{"messageId":"81","fix":"82","desc":"83"},{"messageId":"84","fix":"85","desc":"86"},"suggestUnknown",{"range":"87","text":"88"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"87","text":"89"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1539,1542],"unknown","never"]