[{"/System/Volumes/Data/development/beesoft-components/src/components/dom-handler.ts":"1","/System/Volumes/Data/development/beesoft-components/src/components/common-functions.ts":"2","/System/Volumes/Data/development/beesoft-components/src/components/common-event-handlers.ts":"3","/System/Volumes/Data/development/beesoft-components/src/components/font-awesome.ts":"4","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.stories.tsx":"5","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-types.ts":"6","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.tsx":"7","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.reducer.ts":"8","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-time-selector.component.tsx":"9","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-year-selector.component.tsx":"10","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-month-selector.component.tsx":"11","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-day-selector.component.tsx":"12","/System/Volumes/Data/development/beesoft-components/src/components/form/content-editable-input/content-editable-input.component.tsx":"13","/System/Volumes/Data/development/beesoft-components/src/components/overlay/overlay-panel/overlay-panel.component.tsx":"14","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-functions.ts":"15","/System/Volumes/Data/development/beesoft-components/src/components/common/beesoft-transition/beesoft-transition.component.tsx":"16","/System/Volumes/Data/development/beesoft-components/src/components/common/template-outlet/template-outlet.component.tsx":"17","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-calendar.component.tsx":"18","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-range-selector.component.tsx":"19"},{"size":1086,"mtime":1623583029073,"results":"20","hashOfConfig":"21"},{"size":1117,"mtime":1621078065416,"results":"22","hashOfConfig":"21"},{"size":1182,"mtime":1613225443706,"results":"23","hashOfConfig":"21"},{"size":321,"mtime":1616829375770,"results":"24","hashOfConfig":"21"},{"size":3445,"mtime":1624115670314,"results":"25","hashOfConfig":"21"},{"size":423,"mtime":1624184254758,"results":"26","hashOfConfig":"21"},{"size":11194,"mtime":1624189908304,"results":"27","hashOfConfig":"21"},{"size":2784,"mtime":1624185123507,"results":"28","hashOfConfig":"21"},{"size":6837,"mtime":1623585887820,"results":"29","hashOfConfig":"21"},{"size":3305,"mtime":1623585887821,"results":"30","hashOfConfig":"21"},{"size":3388,"mtime":1623585887818,"results":"31","hashOfConfig":"21"},{"size":4068,"mtime":1624026604053,"results":"32","hashOfConfig":"21"},{"size":2303,"mtime":1622981443801,"results":"33","hashOfConfig":"21"},{"size":3890,"mtime":1623426633992,"results":"34","hashOfConfig":"21"},{"size":5457,"mtime":1624188005479,"results":"35","hashOfConfig":"21"},{"size":1970,"mtime":1620488033239,"results":"36","hashOfConfig":"21"},{"size":426,"mtime":1622030019269,"results":"37","hashOfConfig":"21"},{"size":4736,"mtime":1624188445358,"results":"38","hashOfConfig":"21"},{"size":1623,"mtime":1624189808392,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cc816",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/System/Volumes/Data/development/beesoft-components/src/components/dom-handler.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-functions.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-event-handlers.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/font-awesome.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.stories.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-types.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.tsx",["80","81","82"],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.reducer.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-time-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-year-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-month-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-day-selector.component.tsx",["83","84","85","86","87","88","89"],"import cx from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport React, { useEffect, useRef, useState } from 'react';\nimport TemplateOutlet, { TemplateFunction } from '../../common/template-outlet/template-outlet.component';\nimport DateTimeCalendar from './date-time-calendar.component';\nimport { DayType, getDefaultTime, getMonthMatrix, getTranslatedDays } from './date-time-functions';\nimport { DateTimeActionType, DateTimeReducerAction } from './date-time.reducer';\n\nexport interface DateTimeDaySelectorProps {\n  selectedDate?: Date;\n  viewDate: Date;\n  locale: Locale;\n  showTimeSelector: boolean;\n  selectableDate?: (currentDate: Date) => boolean;\n  isValidDate?: (selectedDate: Date) => boolean;\n  viewTemplate?: DaySelectorTemplate;\n  dispatcher: React.Dispatch<DateTimeReducerAction>;\n}\n\nexport interface DateTimeDaySelectorTemplateProps {\n  selectedDate?: Date;\n  viewDate: Date;\n  locale: Locale;\n  showTimeSelector: boolean;\n  movePreviousMonth: () => void;\n  moveNextMonth: () => void;\n  onMonthClicked: () => void;\n  onTimeClicked: () => void;\n}\n\nexport type DaySelectorTemplate = TemplateFunction<DateTimeDaySelectorTemplateProps>;\n\nexport default function DateTimeDaySelector({\n  selectedDate,\n  viewDate,\n  locale,\n  showTimeSelector,\n  selectableDate,\n  isValidDate,\n  viewTemplate,\n  dispatcher,\n}: DateTimeDaySelectorProps) {\n  const movePreviousMonth = () => {\n    if (viewDate) {\n      dispatcher({\n        type: DateTimeActionType.SetViewDate,\n        viewDate: subMonths(viewDate, 1),\n      });\n    }\n  };\n\n  const moveNextMonth = () => {\n    if (viewDate) {\n      dispatcher({\n        type: DateTimeActionType.SetViewDate,\n        viewDate: addMonths(viewDate, 1),\n      });\n    }\n  };\n\n  const onMonthClicked = () => {\n    dispatcher({\n      type: DateTimeActionType.MonthSelector,\n    });\n  };\n\n  const onTimeClicked = () => {\n    dispatcher({\n      type: DateTimeActionType.TimeSelector,\n    });\n  };\n\n  const getCurrentMonthYear = () => {\n    if (viewDate) {\n      return viewDate.toLocaleDateString(locale.code, {\n        month: 'long',\n        year: 'numeric',\n      });\n    }\n  };\n\n  const templateProps: DateTimeDaySelectorTemplateProps = {\n    selectedDate,\n    viewDate,\n    locale,\n    showTimeSelector,\n    movePreviousMonth,\n    moveNextMonth,\n    onMonthClicked,\n    onTimeClicked,\n  };\n\n  const defaultTemplate = (\n    props: DateTimeDaySelectorTemplateProps,\n    children?: React.ReactNode | React.ReactNodeArray\n  ) => <div className=\"p-2\">{children}</div>;\n\n  const template = viewTemplate || defaultTemplate;\n\n  return (\n    <TemplateOutlet props={templateProps} template={template}>\n      <div className=\"w-full flex flex-row py-1 px-2\">\n        <div className=\"flex-shrink cursor-pointer\">\n          <button className=\"focus:outline-none\" onClick={movePreviousMonth}>\n            <FontAwesomeIcon icon={['fas', 'angle-left']} />\n          </button>\n        </div>\n        <div className=\"flex-grow text-center cursor-pointer\" onClick={onMonthClicked}>\n          {getCurrentMonthYear()}\n        </div>\n        <div className=\"flex-shrink cursor-pointer\">\n          <button className=\"focus:outline-none\" onClick={moveNextMonth}>\n            <FontAwesomeIcon icon={['fas', 'angle-right']} />\n          </button>\n        </div>\n      </div>\n      <DateTimeCalendar\n        viewDate={viewDate}\n        selectedDate={selectedDate}\n        locale={locale}\n        selectableDate={selectableDate}\n        isValidDate={isValidDate}\n        dispatcher={dispatcher}\n      />\n      {showTimeSelector && (\n        <div className=\"w-full flex flex-row p-2 justify-center\">\n          <div\n            className=\"p-2 cursor-pointer hover:bg-gray-300 dark:hover:bg-white dark:hover:text-black dark:text-white\"\n            onClick={onTimeClicked}\n          >\n            {selectedDate?.toLocaleTimeString(locale.code) || getDefaultTime(locale)}\n          </div>\n        </div>\n      )}\n    </TemplateOutlet>\n  );\n}\n","/System/Volumes/Data/development/beesoft-components/src/components/form/content-editable-input/content-editable-input.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/overlay/overlay-panel/overlay-panel.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-functions.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common/beesoft-transition/beesoft-transition.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/common/template-outlet/template-outlet.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-calendar.component.tsx",["90","91","92"],"import cx from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getBrowserLanguage } from '../../common-functions';\nimport { DayType, getMonthMatrix, getTranslatedDays, loadLocale } from './date-time-functions';\nimport { CalendarSelectionMode } from './date-time-types';\nimport { DateTimeActionType, DateTimeReducerAction } from './date-time.reducer';\n\nexport interface DateTimeCalendarProps {\n  viewDate: Date;\n  selectedDate?: Date;\n  selectedStartDate?: Date;\n  selectedEndDate?: Date;\n  selectionMode?: CalendarSelectionMode;\n  locale?: Locale;\n  onDateSelected?: (date: Date) => void;\n  selectableDate?: (currentDate: Date) => boolean;\n  isValidDate?: (selectedDate: Date) => boolean;\n  dispatcher?: React.Dispatch<DateTimeReducerAction>;\n}\n\nexport default function DateTimeCalendar({\n  viewDate,\n  selectedDate,\n  selectionMode = CalendarSelectionMode.Normal,\n  locale,\n  onDateSelected,\n  selectableDate,\n  isValidDate,\n  dispatcher,\n}: DateTimeCalendarProps) {\n  const [monthMatrix, setMonthMatrix] = useState<Array<Array<DayType>>>();\n  const [isLocaleLoaded, setIsLocaleLoaded] = useState(false);\n  const loadedLocale = useRef<Locale>();\n  const weekDaysRef = useRef<Array<string>>();\n\n  const loadLocaleObject = async () => {\n    return locale || (await loadLocale(getBrowserLanguage()));\n  };\n\n  /**\n   * When the component first loads setup the locale either from the passed in property or load it from date-fns.\n   */\n  useEffect(() => {\n    loadLocaleObject()\n      .then((localeObject) => {\n        loadedLocale.current = localeObject;\n        weekDaysRef.current = getTranslatedDays(loadedLocale.current);\n        setIsLocaleLoaded(true);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  /**\n   * Each time the view date changes re-calculate the month matrix.\n   */\n  useEffect(() => {\n    if (viewDate && loadedLocale.current) {\n      setMonthMatrix(getMonthMatrix(viewDate, loadedLocale.current, selectionMode === CalendarSelectionMode.Normal));\n    }\n  }, [viewDate, isLocaleLoaded]);\n\n  /**\n   * If the locale changes then re-calculate the month matrix's language.\n   */\n  useEffect(() => {\n    if (loadedLocale.current && locale) {\n      loadedLocale.current = locale;\n      setMonthMatrix(getMonthMatrix(viewDate, loadedLocale.current, selectionMode === CalendarSelectionMode.Normal));\n    }\n  }, [locale]);\n\n  const onDateClicked = (date: Date) => {\n    if (selectionMode === CalendarSelectionMode.Normal) {\n      if (dispatcher) {\n        dispatcher({\n          type: DateTimeActionType.SetSelectedDate,\n          selectedDate: date,\n        });\n        dispatcher({\n          type: DateTimeActionType.SetViewDate,\n          viewDate: date,\n        });\n      }\n\n      if (onDateSelected) {\n        onDateSelected(date);\n      }\n    } else {\n      if (!onDateSelected) throw new Error('Range selection mode requires onDateSelected to be set');\n      onDateSelected(date);\n    }\n  };\n\n  const isSelectedDate = (currentDate: Date) => {\n    if (selectedDate) {\n      const comparisonDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n      return comparisonDate.toLocaleDateString() === currentDate.toLocaleDateString();\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"grid grid-cols-7 gap-3\">\n        {weekDaysRef.current?.map((day, index) => (\n          <div key={index} className=\"text-center font-bold\">\n            {day}\n          </div>\n        ))}\n        {monthMatrix?.map((row, rIndex) =>\n          row.map((column, cIndex) => {\n            const isSelectable =\n              column.dayValue !== null && (selectableDate === undefined || selectableDate(column.dayValue));\n            const dayStyles = cx('text-center py-1', {\n              'text-gray-400': !column.isCurrent,\n              'bg-blue-100 dark:bg-white dark:text-black rounded-full':\n                column && column.dayValue && isSelectedDate(column.dayValue),\n              'cursor-pointer': isSelectable,\n              'text-red-300 cursor-not-allowed': !isSelectable,\n            });\n\n            return (\n              <div\n                key={rIndex.toString() + cIndex.toString()}\n                className={dayStyles}\n                onClick={() =>\n                  column &&\n                  column.dayValue &&\n                  isSelectable &&\n                  (isValidDate === undefined || isValidDate(column.dayValue)) &&\n                  onDateClicked(column.dayValue)\n                }\n              >\n                {column.dayValue?.getDate().toLocaleString(loadedLocale.current?.code)}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-range-selector.component.tsx",[],{"ruleId":"93","severity":1,"message":"94","line":59,"column":6,"nodeType":"95","endLine":59,"endColumn":16,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"94","line":65,"column":6,"nodeType":"95","endLine":65,"endColumn":14,"suggestions":"97"},{"ruleId":"93","severity":1,"message":"98","line":74,"column":6,"nodeType":"95","endLine":74,"endColumn":13,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":10},{"ruleId":"100","severity":1,"message":"104","line":5,"column":17,"nodeType":"102","messageId":"103","endLine":5,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":5,"column":28,"nodeType":"102","messageId":"103","endLine":5,"endColumn":34},{"ruleId":"100","severity":1,"message":"106","line":5,"column":36,"nodeType":"102","messageId":"103","endLine":5,"endColumn":44},{"ruleId":"100","severity":1,"message":"107","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":17},{"ruleId":"100","severity":1,"message":"108","line":8,"column":35,"nodeType":"102","messageId":"103","endLine":8,"endColumn":49},{"ruleId":"100","severity":1,"message":"109","line":8,"column":51,"nodeType":"102","messageId":"103","endLine":8,"endColumn":68},{"ruleId":"93","severity":1,"message":"94","line":51,"column":6,"nodeType":"95","endLine":51,"endColumn":8,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"111","line":60,"column":6,"nodeType":"95","endLine":60,"endColumn":32,"suggestions":"112"},{"ruleId":"93","severity":1,"message":"113","line":70,"column":6,"nodeType":"95","endLine":70,"endColumn":14,"suggestions":"114"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadLocaleObject'. Either include it or remove the dependency array.","ArrayExpression",["115"],["116"],"React Hook useEffect has a missing dependency: 'getDateValue'. Either include it or remove the dependency array.",["117"],"@typescript-eslint/no-unused-vars","'cx' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'DayType' is defined but never used.","'getMonthMatrix' is defined but never used.","'getTranslatedDays' is defined but never used.",["118"],"React Hook useEffect has a missing dependency: 'selectionMode'. Either include it or remove the dependency array. If 'setMonthMatrix' needs the current value of 'selectionMode', you can also switch to useReducer instead of useState and read 'selectionMode' in the reducer.",["119"],"React Hook useEffect has missing dependencies: 'selectionMode' and 'viewDate'. Either include them or remove the dependency array. If 'setMonthMatrix' needs the current value of 'viewDate', you can also switch to useReducer instead of useState and read 'viewDate' in the reducer.",["120"],{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [language, loadLocaleObject]",{"range":"133","text":"134"},"Update the dependencies array to be: [loadLocaleObject, locale]",{"range":"135","text":"136"},"Update the dependencies array to be: [getDateValue, value]",{"range":"137","text":"138"},"Update the dependencies array to be: [loadLocaleObject]",{"range":"139","text":"140"},"Update the dependencies array to be: [viewDate, isLocaleLoaded, selectionMode]",{"range":"141","text":"142"},"Update the dependencies array to be: [locale, selectionMode, viewDate]",{"range":"143","text":"144"},[2395,2405],"[language, loadLocaleObject]",[2490,2498],"[loadLocaleObject, locale]",[2666,2673],"[getDateValue, value]",[1751,1753],"[loadLocaleObject]",[2030,2056],"[viewDate, isLocaleLoaded, selectionMode]",[2374,2382],"[locale, selectionMode, viewDate]"]