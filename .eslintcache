[{"/System/Volumes/Data/development/beesoft-components/src/components/dom-handler.ts":"1","/System/Volumes/Data/development/beesoft-components/src/components/common-functions.ts":"2","/System/Volumes/Data/development/beesoft-components/src/components/common-event-handlers.ts":"3","/System/Volumes/Data/development/beesoft-components/src/components/font-awesome.ts":"4","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.stories.tsx":"5","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-types.ts":"6","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.tsx":"7","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.reducer.ts":"8","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-time-selector.component.tsx":"9","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-year-selector.component.tsx":"10","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-month-selector.component.tsx":"11","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-day-selector.component.tsx":"12","/System/Volumes/Data/development/beesoft-components/src/components/form/content-editable-input/content-editable-input.component.tsx":"13","/System/Volumes/Data/development/beesoft-components/src/components/overlay/overlay-panel/overlay-panel.component.tsx":"14","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-functions.ts":"15","/System/Volumes/Data/development/beesoft-components/src/components/common/beesoft-transition/beesoft-transition.component.tsx":"16","/System/Volumes/Data/development/beesoft-components/src/components/common/template-outlet/template-outlet.component.tsx":"17","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-calendar.component.tsx":"18","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-range-selector.component.tsx":"19","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-scroller.component.tsx":"20","/System/Volumes/Data/development/beesoft-components/src/components/common-hooks.ts":"21"},{"size":1086,"mtime":1623583029073,"results":"22","hashOfConfig":"23"},{"size":1117,"mtime":1621078065416,"results":"24","hashOfConfig":"23"},{"size":1182,"mtime":1613225443706,"results":"25","hashOfConfig":"23"},{"size":321,"mtime":1616829375770,"results":"26","hashOfConfig":"23"},{"size":4338,"mtime":1625140700352,"results":"27","hashOfConfig":"23"},{"size":478,"mtime":1624964461461,"results":"28","hashOfConfig":"23"},{"size":13317,"mtime":1625140707782,"results":"29","hashOfConfig":"23"},{"size":3992,"mtime":1625136534813,"results":"30","hashOfConfig":"23"},{"size":6837,"mtime":1623585887820,"results":"31","hashOfConfig":"23"},{"size":2954,"mtime":1624967222524,"results":"32","hashOfConfig":"23"},{"size":3062,"mtime":1624967206347,"results":"33","hashOfConfig":"23"},{"size":3508,"mtime":1624797299166,"results":"34","hashOfConfig":"23"},{"size":2303,"mtime":1622981443801,"results":"35","hashOfConfig":"23"},{"size":3890,"mtime":1623426633992,"results":"36","hashOfConfig":"23"},{"size":5457,"mtime":1624797299167,"results":"37","hashOfConfig":"23"},{"size":1970,"mtime":1620488033239,"results":"38","hashOfConfig":"23"},{"size":426,"mtime":1622030019269,"results":"39","hashOfConfig":"23"},{"size":6326,"mtime":1624797299165,"results":"40","hashOfConfig":"23"},{"size":2907,"mtime":1624797299168,"results":"41","hashOfConfig":"23"},{"size":985,"mtime":1624797299169,"results":"42","hashOfConfig":"23"},{"size":632,"mtime":1624797299164,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cc816",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/System/Volumes/Data/development/beesoft-components/src/components/dom-handler.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-functions.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-event-handlers.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/font-awesome.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.stories.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-types.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.component.tsx",["88","89","90"],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time.reducer.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-time-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-year-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-month-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-day-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/content-editable-input/content-editable-input.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/overlay/overlay-panel/overlay-panel.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-functions.ts",[],"/System/Volumes/Data/development/beesoft-components/src/components/common/beesoft-transition/beesoft-transition.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/common/template-outlet/template-outlet.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-calendar.component.tsx",["91","92","93"],"import cx from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getBrowserLanguage } from '../../common-functions';\nimport { useKeyDown } from '../../common-hooks';\nimport { DayType, getMonthMatrix, getTranslatedDays, loadLocale } from './date-time-functions';\nimport { CalendarSelectionMode } from './date-time-types';\nimport { DateTimeActionType, DateTimeReducerAction } from './date-time.reducer';\n\nexport interface DateTimeCalendarProps {\n  viewDate: Date;\n  selectedDate?: Date;\n  selectedStartDate?: Date;\n  selectedEndDate?: Date;\n  selectionMode?: CalendarSelectionMode;\n  locale?: Locale;\n  onDateSelected?: (date: Date, options?: Record<string, any>) => void;\n  selectableDate?: (currentDate: Date) => boolean;\n  isValidDate?: (selectedDate: Date) => boolean;\n  dispatcher?: React.Dispatch<DateTimeReducerAction>;\n}\n\nexport default function DateTimeCalendar({\n  viewDate,\n  selectedDate,\n  selectedStartDate,\n  selectedEndDate,\n  selectionMode = CalendarSelectionMode.Normal,\n  locale,\n  onDateSelected,\n  selectableDate,\n  isValidDate,\n  dispatcher,\n}: DateTimeCalendarProps) {\n  const [monthMatrix, setMonthMatrix] = useState<Array<Array<DayType>>>();\n  const [isLocaleLoaded, setIsLocaleLoaded] = useState(false);\n  const loadedLocale = useRef<Locale>();\n  const weekDaysRef = useRef<Array<string>>();\n  const selectedDateRef = useRef<Date>();\n  const [selectedStartComparison, setSelectedStartComparison] = useState<number>();\n  const [selectedEndComparison, setSelectedEndComparison] = useState<number>();\n\n  const isShiftDown = useKeyDown('Shift');\n\n  const loadLocaleObject = async () => {\n    return locale || (await loadLocale(getBrowserLanguage()));\n  };\n\n  /**\n   * When the component first loads setup the locale either from the passed in property or load it from date-fns.\n   */\n  useEffect(() => {\n    loadLocaleObject()\n      .then((localeObject) => {\n        loadedLocale.current = localeObject;\n        weekDaysRef.current = getTranslatedDays(loadedLocale.current);\n        setIsLocaleLoaded(true);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  /**\n   * Each time the view date changes re-calculate the month matrix.\n   */\n  useEffect(() => {\n    if (viewDate && loadedLocale.current) {\n      setMonthMatrix(getMonthMatrix(viewDate, loadedLocale.current, selectionMode === CalendarSelectionMode.Normal));\n    }\n  }, [viewDate, isLocaleLoaded]);\n\n  useEffect(() => {\n    if (selectedDate) {\n      selectedDateRef.current = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    if (selectedStartDate && selectedEndDate) {\n      setSelectedStartComparison(\n        new Date(selectedStartDate.getFullYear(), selectedStartDate.getMonth(), selectedStartDate.getDate()).getTime()\n      );\n      setSelectedEndComparison(\n        new Date(\n          selectedEndDate.getFullYear(),\n          selectedEndDate.getMonth(),\n          selectedEndDate.getDate(),\n          23,\n          59,\n          59\n        ).getTime()\n      );\n    }\n  }, [selectedStartDate, selectedEndDate]);\n\n  /**\n   * If the locale changes then re-calculate the month matrix's language.\n   */\n  useEffect(() => {\n    if (loadedLocale.current && locale) {\n      loadedLocale.current = locale;\n      setMonthMatrix(getMonthMatrix(viewDate, loadedLocale.current, selectionMode === CalendarSelectionMode.Normal));\n    }\n  }, [locale]);\n\n  const onDateClicked = (date: Date) => {\n    if (selectionMode === CalendarSelectionMode.Normal) {\n      if (dispatcher) {\n        dispatcher({\n          type: DateTimeActionType.SetSelectedDate,\n          selectedDate: date,\n        });\n        dispatcher({\n          type: DateTimeActionType.SetViewDate,\n          viewDate: date,\n        });\n      }\n\n      if (onDateSelected) {\n        onDateSelected(date);\n      }\n    } else {\n      if (!onDateSelected) throw new Error('Range selection mode requires onDateSelected to be set');\n      if (!selectedStartDate || (selectedStartDate && !isShiftDown)) {\n        onDateSelected(date);\n      } else if (selectedStartDate && isShiftDown) {\n        onDateSelected(date, { setEndDate: true });\n      }\n    }\n  };\n\n  const isSelectedDate = (currentDate: Date) => {\n    return selectedDateRef.current?.toLocaleDateString() === currentDate.toLocaleDateString();\n  };\n\n  const isInSelectedDateRange = (currentDate: Date) => {\n    if (selectedStartComparison && selectedEndComparison) {\n      const currentDateValue = currentDate.getTime();\n      return currentDateValue >= selectedStartComparison && currentDateValue <= selectedEndComparison;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"grid grid-cols-7 gap-3\">\n        {weekDaysRef.current?.map((day, index) => (\n          <div key={index} className=\"text-center font-bold\">\n            {day}\n          </div>\n        ))}\n        {monthMatrix?.map((row, rIndex) =>\n          row.map((column, cIndex) => {\n            const isSelectable =\n              column.dayValue !== null && (selectableDate === undefined || selectableDate(column.dayValue));\n            const dayStyles = cx('text-center py-1', {\n              'text-gray-400': !column.isCurrent,\n              'bg-blue-100 dark:bg-white dark:text-black rounded-full':\n                column &&\n                column.dayValue &&\n                ((selectedDateRef.current && isSelectedDate(column.dayValue)) ||\n                  (selectedStartComparison && selectedEndComparison && isInSelectedDateRange(column.dayValue))),\n              'cursor-pointer': isSelectable,\n              'text-red-300 cursor-not-allowed': !isSelectable,\n            });\n\n            return (\n              <div\n                key={rIndex.toString() + cIndex.toString()}\n                className={dayStyles}\n                onClick={() =>\n                  column &&\n                  column.dayValue &&\n                  isSelectable &&\n                  (isValidDate === undefined || isValidDate(column.dayValue)) &&\n                  onDateClicked(column.dayValue)\n                }\n              >\n                {column.dayValue?.getDate().toLocaleString(loadedLocale.current?.code)}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n","/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-range-selector.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/form/date-time/date-time-scroller.component.tsx",[],"/System/Volumes/Data/development/beesoft-components/src/components/common-hooks.ts",["94"],"import { useEffect, useState } from 'react';\n\nexport function useKeyDown(keyCode: string) {\n  const [keyDown, setKeyDown] = useState(false);\n\n  const downHandler = ({ key }) => {\n    if (key === keyCode) {\n      setKeyDown(true);\n    }\n  };\n  const upHandler = ({ key }) => {\n    if (key === keyCode) {\n      setKeyDown(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []);\n\n  return keyDown;\n}\n",{"ruleId":"95","severity":1,"message":"96","line":61,"column":6,"nodeType":"97","endLine":61,"endColumn":16,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"96","line":67,"column":6,"nodeType":"97","endLine":67,"endColumn":14,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"100","line":77,"column":6,"nodeType":"97","endLine":77,"endColumn":35,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"96","line":59,"column":6,"nodeType":"97","endLine":59,"endColumn":8,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"103","line":68,"column":6,"nodeType":"97","endLine":68,"endColumn":32,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"105","line":102,"column":6,"nodeType":"97","endLine":102,"endColumn":14,"suggestions":"106"},{"ruleId":"95","severity":1,"message":"107","line":25,"column":6,"nodeType":"97","endLine":25,"endColumn":8,"suggestions":"108"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadLocaleObject'. Either include it or remove the dependency array.","ArrayExpression",["109"],["110"],"React Hook useEffect has a missing dependency: 'getDateValue'. Either include it or remove the dependency array. Mutable values like 'loadedLocale.current' aren't valid dependencies because mutating them doesn't re-render the component.",["111"],["112"],"React Hook useEffect has a missing dependency: 'selectionMode'. Either include it or remove the dependency array. If 'setMonthMatrix' needs the current value of 'selectionMode', you can also switch to useReducer instead of useState and read 'selectionMode' in the reducer.",["113"],"React Hook useEffect has missing dependencies: 'selectionMode' and 'viewDate'. Either include them or remove the dependency array. If 'setMonthMatrix' needs the current value of 'viewDate', you can also switch to useReducer instead of useState and read 'viewDate' in the reducer.",["114"],"React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.",["115"],{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [language, loadLocaleObject]",{"range":"130","text":"131"},"Update the dependencies array to be: [loadLocaleObject, locale]",{"range":"132","text":"133"},"Update the dependencies array to be: [value, getDateValue]",{"range":"134","text":"135"},"Update the dependencies array to be: [loadLocaleObject]",{"range":"136","text":"137"},"Update the dependencies array to be: [viewDate, isLocaleLoaded, selectionMode]",{"range":"138","text":"139"},"Update the dependencies array to be: [locale, selectionMode, viewDate]",{"range":"140","text":"141"},"Update the dependencies array to be: [downHandler, upHandler]",{"range":"142","text":"143"},[2537,2547],"[language, loadLocaleObject]",[2632,2640],"[loadLocaleObject, locale]",[2843,2872],"[value, getDateValue]",[2121,2123],"[loadLocaleObject]",[2400,2426],"[viewDate, isLocaleLoaded, selectionMode]",[3453,3461],"[locale, selectionMode, viewDate]",[606,608],"[downHandler, upHandler]"]